{
	"info": {
		"_postman_id": "a85eda2a-83ed-4ba0-aead-b29b807de3dc",
		"name": "Telemedicine Register-Login",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37355523"
	},
	"item": [
		{
			"name": "REGISTER — Patient Valid",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function uniq() {",
							"  return `${Date.now()}_${pm.info.iteration}_${Math.random().toString(36).slice(2,8)}`;",
							"}",
							"",
							"pm.collectionVariables.set(\"patient_email\", `pt_${uniq()}@example.com`);",
							"pm.collectionVariables.set(\"patient_password\", \"secret123\");",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('สถานะต้องเป็น 200 หรือ 201', ()=> pm.expect([200,201]).to.include(pm.response.code));",
							"const j = pm.response.json();",
							"pm.test('มี token', ()=> pm.expect(j.token).to.be.a('string'));",
							"pm.test('ตำแหน่ง patient', ()=> pm.expect(j.user && j.user.role).to.equal('patient'));",
							"pm.test('ข้อมูลผู้ใช้ต้องมี id, email, role, first_name, last_name', ()=> { pm.expect(j.user.id).to.be.a('number'); pm.expect(j.user.email).to.be.a('string'); });"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Patient\",\n  \"email\": \"{{patient_email}}\",\n  \"password\": \"{{patient_password}}\",\n  \"role\": \"patient\"\n}\n"
				},
				"url": {
					"raw": "{{base_url}}/auth/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "REGISTER — Patient Invalid อีเมลซ้ำ",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('สถานะต้องเป็น 400 หรือ 409', ()=> pm.expect([409,400]).to.include(pm.response.code));",
							"pm.test('message เป็น string', ()=> pm.expect(pm.response.json().message).to.be.a('string'));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Patient\",\n  \"email\": \"{{patient_email}}\",\n  \"password\": \"{{patient_password}}\",\n  \"role\": \"patient\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/auth/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "REGISTER — Patient Invalid ไม่กรอกข้อมูล",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('สถานะต้องเป็น 400', ()=> pm.response.to.have.status(400));",
							"pm.test('message เป็น string', ()=> pm.expect(pm.response.json().message).to.be.a('string'));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{}"
				},
				"url": {
					"raw": "{{base_url}}/auth/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "REGISTER — Patient Invalid รูปแบบอีเมลไม่ถูก",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('สถานะต้องเป็น 400', ()=> pm.response.to.have.status(400));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Patient\",\n  \"email\": \"TOA555\",\n  \"password\": \"123456\",\n  \"role\": \"patient\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/auth/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "REGISTER — Patient Invalid รหัสผ่านสั้นเกินไป",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('สถานะต้องเป็น 400', ()=> pm.response.to.have.status(400));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Patient\",\n  \"email\": \"patient@gmail.com\",\n  \"password\": \"123\",\n  \"role\": \"patient\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/auth/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "REGISTER — Doctor Valid",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function uniq(prefix = \"u\") {",
							"  return `${prefix}_${Date.now()}_${pm.info.iteration}_${Math.random().toString(36).slice(2,8)}`;",
							"}",
							"",
							"pm.collectionVariables.set(\"doctor_email\", `docAuto${uniq()}@gmail.com`);",
							"pm.collectionVariables.set(\"doctor_password\", \"123456\");",
							"",
							"const BASE = pm.variables.get(\"base_url\") || \"http://localhost:4000\";",
							"const url = `${BASE.replace(/\\/+$/, \"\")}/specialties`;",
							"",
							"pm.sendRequest({ url, method: \"GET\" }, (err, res) => {",
							"  if (err) { throw new Error(\"โหลด specialties ไม่สำเร็จ: \" + err.message); }",
							"",
							"  const data = res.json();",
							"  // รองรับทั้งแบบ array ตรง ๆ หรือ { items: [...] }",
							"  const list = Array.isArray(data) ? data : data.items;",
							"",
							"  if (!Array.isArray(list) || list.length === 0) {",
							"    throw new Error(\"ไม่พบ specialties ในฐานข้อมูล\");",
							"  }",
							"  const ids = list.map(x => x.id).filter(Number.isFinite);",
							"  if (!ids.length) {",
							"    throw new Error(\"รูปแบบ specialties ไม่ถูกต้อง (ไม่มี id)\");",
							"  }",
							"",
							"  const pick = ids[Math.floor(Math.random() * ids.length)];",
							"  pm.collectionVariables.set(\"specialty_id_valid\", pick);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('สถานะต้องเป็น 201 หรือ 200', ()=> pm.expect([200,201]).to.include(pm.response.code));",
							"const j=pm.response.json();",
							"pm.test('มี token', ()=> pm.expect(j.token).to.be.a('string'));",
							"pm.test('ตำแหน่ง doctor', ()=> pm.expect(j.user && j.user.role).to.equal('doctor'));",
							"pm.test('ข้อมูลผู้ใช้ต้องมี id, email, role, first_name, last_name', ()=> { pm.expect(j.user.id).to.be.a('number'); pm.expect(j.user.email).to.be.a('string'); });",
							"pm.collectionVariables.set('doctor_token', j.token);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Dr OK\",\n  \"email\": \"{{doctor_email}}\",\n  \"password\": \"{{doctor_password}}\",\n  \"role\": \"doctor\",\n  \"specialty\": {{specialty_id_valid}}\n}"
				},
				"url": {
					"raw": "{{base_url}}/auth/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "REGISTER — Doctor Invalid ใส่ผิดโรล",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('สถานะต้องเป็น 400', ()=> pm.response.to.have.status(400));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Dock\",\n  \"email\": \"Dock@gmail.com\",\n  \"password\": \"123456\",\n  \"role\": \"docktor\",\n  \"specialty\": \"1\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/auth/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "REGISTER — Doctor Invalid ไม่ใส่สาขา",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('สถานะต้องเป็น 400', ()=> pm.response.to.have.status(400));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Dock\",\n  \"email\": \"Dock@gmail.com\",\n  \"password\": \"123456\",\n  \"role\": \"doctor\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/auth/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "REGISTER — Doctor Invalid ใส่สาขาที่ไม่มีอยู่",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('สถานะต้องเป็น 400/404', ()=> pm.expect([400,404]).to.include(pm.response.code));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Doc\",\n  \"email\": \"dr@gmail.com\",\n  \"password\": \"123456\",\n  \"role\": \"doctor\",\n  \"specialty\": {{specialty_id_invalid}}\n}"
				},
				"url": {
					"raw": "{{base_url}}/auth/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOGIN — Patient Valid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('สถานะต้องเป็น 200', ()=> pm.response.to.have.status(200));",
							"const j=pm.response.json();",
							"pm.test('ม token', ()=> pm.expect(j.token).to.be.a('string'));",
							"pm.collectionVariables.set('patient_token', j.token);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"{{patient_email}}\",\n  \"password\": \"{{patient_password}}\"\n}\n"
				},
				"url": {
					"raw": "{{base_url}}/auth/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOGIN — Doctor Valid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('สถานะต้องเป็น 200', ()=> pm.response.to.have.status(200));\r",
							"const j=pm.response.json();\r",
							"pm.test('มี token', ()=> pm.expect(j.token).to.be.a('string'));\r",
							"pm.collectionVariables.set('doctor_token_token', j.token);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"{{doctor_email}}\",\r\n  \"password\": \"{{doctor_password}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOGIN — Invalid ไม่กรอกข้อมูล",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('สถานะต้องเป็น 400', ()=> pm.response.to.have.status(400));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{}"
				},
				"url": {
					"raw": "{{base_url}}/auth/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOGIN — Invalid ไม่ใส่ Password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('สถานะต้องเป็น 400', ()=> pm.response.to.have.status(400));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"{{patient_email}}\",\n  \"password\": \"\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/auth/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOGIN — Invalid รหัสผ่านผิด",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('สถานะต้องเป็น 401 หรือ 400', ()=> pm.expect([401,400]).to.include(pm.response.code));",
							"pm.test('message เป็น string', ()=> pm.expect(pm.response.json().message).to.be.a('string'));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"{{patient_email}}\",\n  \"password\": \"88888888\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/auth/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOGIN — Invalid เมลที่ไม่มีในระบบ",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('สถานะต้องเป็น 401 หรือ 404', ()=> pm.expect([401,404]).to.include(pm.response.code));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"not_exist@gmail.com\",\n  \"password\": \"123456\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/auth/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOGIN — Invalid รูปแบบอีเมลไม่ถูกต้อง",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('สถานะต้องเป็น 400', ()=> pm.response.to.have.status(400));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"Nomail\",\n  \"password\": \"123456\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/auth/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:4000",
			"type": "string",
			"description": {
				"content": "",
				"type": "text/plain"
			}
		},
		{
			"key": "doctor_email",
			"value": "",
			"type": "string",
			"description": {
				"content": "",
				"type": "text/plain"
			}
		},
		{
			"key": "doctor_password",
			"value": "123456",
			"type": "string",
			"description": {
				"content": "",
				"type": "text/plain"
			}
		},
		{
			"key": "doctor_token",
			"value": "",
			"type": "string",
			"description": {
				"content": "",
				"type": "text/plain"
			}
		},
		{
			"key": "invalid_token",
			"value": "Bearer invalid.invalid.invalid",
			"type": "string",
			"description": {
				"content": "",
				"type": "text/plain"
			}
		},
		{
			"key": "patient_email",
			"value": "",
			"type": "string",
			"description": {
				"content": "",
				"type": "text/plain"
			}
		},
		{
			"key": "patient_password",
			"value": "123456",
			"type": "string",
			"description": {
				"content": "",
				"type": "text/plain"
			}
		},
		{
			"key": "patient_token",
			"value": "",
			"type": "string",
			"description": {
				"content": "",
				"type": "text/plain"
			}
		},
		{
			"key": "specialty_id_invalid",
			"value": "99999",
			"type": "string",
			"description": {
				"content": "",
				"type": "text/plain"
			}
		},
		{
			"key": "specialty_id_valid",
			"value": "1",
			"type": "string",
			"description": {
				"content": "",
				"type": "text/plain"
			}
		}
	]
}